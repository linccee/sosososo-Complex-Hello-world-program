spring:
  application:
    name: hello-service
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/hellodb
    username: admin
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    timeout: 2000
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: hello-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.overengineered.hello.event
  zipkin:
    base-url: http://localhost:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0

server:
  port: 8081
  servlet:
    context-path: /api/v1/hello

# Eureka client configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
  info:
    env:
      enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Custom properties
hello:
  generation:
    default-language: en
    cache-expiration-seconds: 3600
    strategies:
      standard:
        enabled: true
        weight: 50
      reversed:
        enabled: true
        weight: 25
      encoded:
        enabled: true
        weight: 25
    languages:
      en: Hello
      fr: Bonjour
      es: Hola
      de: Hallo
      it: Ciao
      ja: こんにちは
      zh: 你好
      ru: Привет
    formality-levels:
      1: very casual
      2: casual
      3: neutral
      4: formal
      5: very formal
  event:
    publishing:
      enabled: true
      async: true
  security:
    api-key-header: X-API-Key
    api-key: ${API_KEY:dev-api-key-12345}

# Logging configuration
logging:
  level:
    com.overengineered.hello: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/hello-service.log

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:hellodb
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/hellodb
    username: admin
    password: password
  redis:
    host: redis
  kafka:
    bootstrap-servers: kafka:9092
  zipkin:
    base-url: http://zipkin:9411

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/

management:
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
